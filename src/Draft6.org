* Moving to draft 6

** Incompatible changes

*** TODO $id

For the moment, we check whether the user uses `id` and fallback
to checking `$id` if `id` fails.

**** Note

TODO: We must allow the usage of `id` as a field.

*** TODO $ref

**** TODO only allowed where a schema is expected
**** TODO it is now possible to describe instance properties named "$ref"

*** DONE exclusiveMinimum
    CLOSED: [2021-03-12 Fri 10:24]

- changed from a boolean to a number to be consistent with the principle of keyword independence

*** DONE exclusiveMaximum
    CLOSED: [2021-03-12 Fri 10:24]

- changed from a boolean to a number to be consistent with the principle of keyword independence
*** DONE type
    CLOSED: [2021-03-12 Fri 11:50]

in draft-04, "integer" is listed as a primitive type and defined as “a JSON
number without a fraction or exponent part”; in draft-06, "integer" is not
considered a primitive type and is only defined in the section for keyword "type"
as “any number with a zero fractional part”; 1.0 is thus not a valid "integer"
type in draft-04 and earlier, but is a valid "integer" type in draft-06 and
later; note that both drafts say that integers SHOULD be encoded in JSON without
fractional parts

** Additions And Backwards compatible changes

*** TODO booleans as schemas

**** Change

allowable anywhere, not just "additionalProperties" and "additionalItems"

**** Consequence
 true is equivalent to {}, false is equivalent to {"not": {}}, but the intent is
more clear and implementations can optimize these cases more easily

*** DONE propertyNames
    CLOSED: [2021-03-12 Fri 15:45]

Added.

takes a schema which validates the names of all properties rather than their values

*** DONE contains
    CLOSED: [2021-03-12 Fri 15:05]

added

array keyword that passes validation if its schema validates at least one array item

*** DONE const
    CLOSED: [2021-03-12 Fri 13:07]

added

more readible form of a one-element "enum"

*** DONE required
    CLOSED: [2021-03-12 Fri 13:15]

allows an empty array

an empty array indicates that no properties are required

**** NOTE:

This case was already handle in `jesse`. The implementation should have checked the the array
contains at least one argument, failing on empty arrays. The array was not checked, thus
it handles the empty array case.

*** DONE dependencies
    CLOSED: [2021-03-12 Fri 13:02]

allows an empty array for property dependencies

an empty array indicates that there are no dependencies for the given property

**** NOTE

jesse already handle empty arrays in the correct way in the `check_value` function.

*** DONE "format": "uri-reference"
    CLOSED: [2021-03-12 Fri 12:49]

added

allows relative URI references per RFC 3986; see the section below about "uri" as a format

Simple: use library uri_string:parse(), which returns either a uri_map() or error()
http://erlang.org/doc/man/uri_string.html#parse-1

*** TODO "format": "uri-template"

added

indicates an RFC 6570 conforming URI Template value, as is used in JSON Hyper-Schema for "href"

*** TODO "format": "json-pointer"

added

indicates a JSON Pointer value such as /foo/bar; do not use this for JSON Pointer
URI fragments such as #/foo/bar: the proper format for those is "uri-reference"

*** DONE examples
    CLOSED: [2021-03-12 Fri 15:59]

added

array of examples with no validation effect; the value of "default" is usable as
an example without repeating it under this keyword
